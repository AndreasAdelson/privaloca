security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users:
            entity:
                class: 'App\Domain\Model\Utilisateur'
                # property: login
            # the property to query by - e.g. username, email, etc
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: users
            guard:
                authenticators:
                    - App\Infrastructure\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                target: /
            form_login:
                login_path: app_login
                check_path: app_login
                default_target_path: home
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    encoders:
        # this internal class is used by Symfony to represent in-memory users
        Symfony\Component\Security\Core\User\User: 'auto'
        App\Domain\Model\Utilisateur: bcrypt

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/admin/utilisateur, roles: ROLE_RUSER }
        - { path: ^/admin/utilisateur/edit, roles: ROLE_ADMIN }
        - { path: ^/admin/utilisateur/show, roles: ROLE_ADMIN }

        - { path: ^/admin/fonction/new, roles: ROLE_CFONCTION }
        - { path: ^/admin/fonction, roles: ROLE_RFONCTION }

        - { path: ^/admin/role, roles: ROLE_RROLE }
        - { path: ^/admin/role/new, roles: ROLE_CROLE }
        - { path: ^/admin/role/edit, roles: ROLE_UROLE }
        - { path: ^/admin/role/show, roles: ROLE_RROLE }

        - { path: ^/admin/category, roles: ROLE_RCATEGORY }
        - { path: ^/admin/category/new, roles: ROLE_CCATEGORY }
        - { path: ^/admin/category/edit, roles: ROLE_UCATEGORY }
        - { path: ^/admin/category/show, roles: ROLE_RCATEGORY }

        # - { path: ^/admin/entreprise, roles: ROLE_RCOMPANY }
        - { path: ^/admin/entreprise/show, roles: ROLE_RCOMPANY }
        - { path: ^/admin/entreprise/edit, roles: ROLE_UCOMPANY }
        - { path: ^/admin/registered/entreprise, roles: ROLE_RCOMPANY }
        - { path: ^/admin/registered/entreprise/show, roles: ROLE_RCOMPANY }
        - { path: ^/admin/registered/entreprise/edit, roles: ROLE_UCOMPANY }

        - { path: ^/admin/companystatut, roles: ROLE_RCOMPANYSTATUT }
        - { path: ^/admin/companystatut/show, roles: ROLE_RCOMPANYSTATUT }
        - { path: ^/admin/companystatut/edit, roles: ROLE_UCOMPANYSTATUT }
        - { path: ^/admin/companystatut/new, roles: ROLE_CCOMPANYSTATUT }

        - { path: ^/admin/group, roles: ROLE_RGROUP }
        - { path: ^/admin/group/new, roles: ROLE_CGROUP }
        - { path: ^/admin/group/edit, roles: ROLE_UGROUP }
        - { path: ^/admin/group/show, roles: ROLE_RGROUP }






        - { path: ^/utilisateur/edit, roles: IS_AUTHENTICATED_FULLY }
